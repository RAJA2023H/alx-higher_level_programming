importing the function:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

case: list of lists of integers or floats and same size
>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

case: deffrent size
>>> matrix = [[1, 2, 3],[4, 5, 6, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

case:  list of lists of integers or floats,
>>> matrix = [[1, 2, "hello"], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

case: if div not (integer or float)
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, "a")
Traceback (most recent call last):
...
TypeError: div must be a number

case: [[3]] / 3
>>> matrix = [[3]] 
>>> matrix_divided(matrix, 3)
[[1.0]]

case: []
>>> matrix = [] 
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

case : div is null
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
