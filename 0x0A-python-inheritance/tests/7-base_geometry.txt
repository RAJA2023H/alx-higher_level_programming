>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

case: float
>>> bg.integer_validator("age", 10.5)
Traceback (most recent call last):
...
TypeError: name must be an integer

case: value is string
>>> bg.integer_validator("name", "raja")
Traceback (most recent call last):
...
TypeError: name must be an integer

case: area() is not implemented
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

case: integer_validator without arguments
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

case: valid name(string) and valid value (integer)
>>> bg.integer_validator("my_int", 12)

case: value is 0
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

case: value is tuple
>>> bg.integer_validator("score", (30,))
Traceback (most recent call last):
...
TypeError: score must be an integer

case: value is list
>>> bg.integer_validator("score", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer

case: value is None
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer

case: too many args
>>> bg.area(13)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given

case: negative
>>> bg.integer_validator("integer", -13)
Traceback (most recent call last):
...
ValueError: integer must be greater than 0

case: bool type
>>> bg.integer_validator("bool", False)
Traceback (most recent call last):
...
TypeError: name must be an integer
