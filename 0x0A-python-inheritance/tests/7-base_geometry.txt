check test
- - - - - - -

# Checking the presence of documentation:
   >>> moduledoc = __import__('7-base_geometry').__doc__
   >>> print(len(moduledoc) > 1)
   True

# Check whether the MyList class have documentation:
   >>> classdoc = __import__('7-base_geometry').BaseGeometry.__doc__
   >>> print(len(classdoc) > 1)
   True

   >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

   >>> bg = BaseGeometry()


# normal case:
   >>> bg.integer_validator("space", 89)

# not int:
   >>> bg.integer_validator("age", 0)
   Traceback (most recent call last):
   ...
   ValueError: age must be greater than 0

# empty args
   >>> bg.integer_validator()
   Traceback (most recent call last):
   ...   
   TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

# Test present: integer_validator(“age”, “4”)
   >>> bg.integer_validator("age", "4")
   Traceback (most recent call last):
   ...
   TypeError: age must be an integer

# Test present: integer_validator(“age”)
   >>> bg.integer_validator("age")
   Traceback (most recent call last):
   ...
   TypeError: integer_validator() missing 1 required positional argument: 'value'

# test present: area()
   >>> area()
   Traceback (most recent call last):
   ...
   NameError: name 'area' is not defined

# test present: bg,area()
   >>> bg.area()
   Traceback (most recent call last):
   ...
   Exception: area() is not implemented

# Test present: integer_validator("age", (4,))
   >>> bg.integer_validator("age", (4,))
   Traceback (most recent call last):
   ...
   TypeError: age must be an integer

# test present: integer_validator("age", [3])
   >>> bg.integer_validator("age", [3])
   Traceback (most recent call last):
   ...
   TypeError: age must be an integer

#24 check integer_validator where value is Boolean
   >>> bg = BaseGeometry()
   >>> bg.integer_validator("name", True)
   Traceback (most recent call last):
   ...
   TypeError: name must be an integer

# Test present: integer_validator("age", {3, 4})
   >>> bg.integer_validator("age", {3, 4})
   Traceback (most recent call last):
   ...
   TypeError: age must be an integer

# Test present: integer_validator("age", None)
   >>> bg.integer_validator("age", None)
   Traceback (most recent call last):
   ...
   TypeError: age must be an integer
